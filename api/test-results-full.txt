
> api@1.0.0 test
> jest --runInBand --detectOpenHandles

FAIL src/interfaces/controllers/comment/comment.controller.integration.spec.ts (65.033 s)
  ● CommentController Integration Tests - Comment Flow › POST /comments › should create a new comment

    expected 201 "Created", got 404 "Not Found"

      106 |         .post('/api/comments')
      107 |         .send(commentData)
    > 108 |         .expect(201);
          |          ^
      109 |
      110 |       expect(response.body).toHaveProperty('id');
      111 |       expect(response.body).toHaveProperty('content', `${testPrefix}COMMENT_CREATE`);

      at Object.<anonymous> (interfaces/controllers/comment/comment.controller.integration.spec.ts:108:10)
      ----
      at Test._assertStatus (../node_modules/supertest/lib/test.js:309:14)
      at ../node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (../node_modules/supertest/lib/test.js:342:13)
      at Test.assert (../node_modules/supertest/lib/test.js:195:23)
      at localAssert (../node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (../node_modules/supertest/lib/test.js:152:11)

  ● CommentController Integration Tests - Comment Flow › PUT /comments/:id › should update a comment

    expected 200 "OK", got 404 "Not Found"

      232 |         .put(`/api/comments/${updateCommentId}`)
      233 |         .send(updateData)
    > 234 |         .expect(200);
          |          ^
      235 |
      236 |       expect(response.body).toHaveProperty('id', updateCommentId);
      237 |       expect(response.body).toHaveProperty('content', `${testPrefix}COMMENT_UPDATE_MODIFIED`);

      at Object.<anonymous> (interfaces/controllers/comment/comment.controller.integration.spec.ts:234:10)
      ----
      at Test._assertStatus (../node_modules/supertest/lib/test.js:309:14)
      at ../node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (../node_modules/supertest/lib/test.js:342:13)
      at Test.assert (../node_modules/supertest/lib/test.js:195:23)
      at localAssert (../node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (../node_modules/supertest/lib/test.js:152:11)

  ● CommentController Integration Tests - Comment Flow › DELETE /comments/:id › should delete a comment

    expected 204 "No Content", got 404 "Not Found"

      267 |       await request(app.getHttpServer())
      268 |         .delete(`/api/comments/${deleteCommentId}`)
    > 269 |         .expect(204);  // Changed from 200 to 204 (No Content)
          |          ^
      270 |
      271 |       // Verify deleted from database
      272 |       const deletedComment = await prisma.comment.findUnique({

      at Object.<anonymous> (interfaces/controllers/comment/comment.controller.integration.spec.ts:269:10)
      ----
      at Test._assertStatus (../node_modules/supertest/lib/test.js:309:14)
      at ../node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (../node_modules/supertest/lib/test.js:342:13)
      at Test.assert (../node_modules/supertest/lib/test.js:195:23)
      at localAssert (../node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (../node_modules/supertest/lib/test.js:152:11)

  ● CommentController Integration Tests - Comment Flow › Comment workflow integration › should handle complete comment workflow with replies

    expected 201 "Created", got 404 "Not Found"

      296 |           content: `${testPrefix}COMMENT_PARENT`
      297 |         })
    > 298 |         .expect(201);
          |          ^
      299 |
      300 |       const parentId = parentResponse.body.id;
      301 |

      at Object.<anonymous> (interfaces/controllers/comment/comment.controller.integration.spec.ts:298:10)
      ----
      at Test._assertStatus (../node_modules/supertest/lib/test.js:309:14)
      at ../node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (../node_modules/supertest/lib/test.js:342:13)
      at Test.assert (../node_modules/supertest/lib/test.js:195:23)
      at localAssert (../node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (../node_modules/supertest/lib/test.js:152:11)

PASS src/interfaces/controllers/step/step.controller.integration.spec.ts (10.197 s)
FAIL src/interfaces/controllers/step/step.controller.simple.spec.ts (7.046 s)
  ● StepController Unit Tests › assignTo › should assign a user to a step

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"assigneeId": 2, "stepId": 1}
    Received: 1, {"assigneeId": 2}

    Number of calls: 1

      112 |       const result = await controller.assignTo(stepId, { assigneeId });
      113 |
    > 114 |       expect(assignStepToUserUseCase.execute).toHaveBeenCalledWith({ stepId, assigneeId });
          |                                               ^
      115 |       expect(result).toHaveProperty('id', 1);
      116 |       expect(result).toHaveProperty('assigneeId', assigneeId);
      117 |     });

      at Object.<anonymous> (interfaces/controllers/step/step.controller.simple.spec.ts:114:47)

  ● StepController Unit Tests › assignTo › should unassign a user when assigneeId is null

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"assigneeId": null, "stepId": 1}
    Received: 1, {"assigneeId": null}

    Number of calls: 1

      125 |       const result = await controller.assignTo(stepId, { assigneeId: null });
      126 |
    > 127 |       expect(assignStepToUserUseCase.execute).toHaveBeenCalledWith({ stepId, assigneeId: null });
          |                                               ^
      128 |       expect(result).toHaveProperty('assigneeId', null);
      129 |     });
      130 |

      at Object.<anonymous> (interfaces/controllers/step/step.controller.simple.spec.ts:127:47)

[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31m[test-request-id] Internal Server Error[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mError: Something went wrong
    at Object.<anonymous> (/mnt/c/work/git2/process-todo/api/src/common/filters/global-exception.filter.spec.ts:83:25)
    at Promise.finally.completed (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
    at _callCircusTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
    at _runTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
    at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
    at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
    at run (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
    at jestAdapter (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/runner.js:101:19)
    at runTestInternal (/mnt/c/work/git2/process-todo/api/node_modules/jest-runner/build/index.js:275:16)
    at runTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-runner/build/index.js:343:7)[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mObject:[39m
{
  "requestId": "test-request-id",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 500,
  "timestamp": "2025-08-16T13:01:27.160Z"
}

[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31m[test-request-id] Internal Server Error[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mError: Database connection failed: password=secret123
    at Object.<anonymous> (/mnt/c/work/git2/process-todo/api/src/common/filters/global-exception.filter.spec.ts:98:25)
    at Promise.finally.completed (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
    at _callCircusTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
    at _runTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
    at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
    at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
    at run (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
    at jestAdapter (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/runner.js:101:19)
    at runTestInternal (/mnt/c/work/git2/process-todo/api/node_modules/jest-runner/build/index.js:275:16)
    at runTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-runner/build/index.js:343:7)[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mObject:[39m
{
  "requestId": "test-request-id",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 500,
  "timestamp": "2025-08-16T13:01:27.181Z"
}

[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31m[test-request-id] Internal Server Error[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mError: Test error
    at TestFile.js:10:5[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mObject:[39m
{
  "requestId": "test-request-id",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 500,
  "timestamp": "2025-08-16T13:01:27.183Z"
}

[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31m[test-request-id] Internal Server Error[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mError: Test error
    at TestFile.js:10:5[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [31m  ERROR[39m [38;5;3m[GlobalExceptionFilter] [39m[31mObject:[39m
{
  "requestId": "test-request-id",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 500,
  "timestamp": "2025-08-16T13:01:27.188Z"
}

FAIL src/common/filters/global-exception.filter.spec.ts
  ● GlobalExceptionFilter › catch › should handle rate limit errors

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"errorCode": "RATE_LIMIT_ERROR", "message": "Too Many Requests", "statusCode": 429}
    Received: {"message": "Too Many Requests", "method": "GET", "path": "/api/test", "requestId": "test-request-id", "statusCode": 429, "timestamp": "2025-08-16T13:01:27.191Z"}

    Number of calls: 1

      184 |
      185 |       expect(mockResponse.status).toHaveBeenCalledWith(HttpStatus.TOO_MANY_REQUESTS);
    > 186 |       expect(mockResponse.json).toHaveBeenCalledWith(
          |                                 ^
      187 |         expect.objectContaining({
      188 |           statusCode: HttpStatus.TOO_MANY_REQUESTS,
      189 |           message: 'Too Many Requests',

      at Object.<anonymous> (common/filters/global-exception.filter.spec.ts:186:33)

[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33m[test-request-id] Client Error: HttpException: Test error[39m
[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33mObject:[39m
{
  "requestId": "test-request-id",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 400,
  "timestamp": "2025-08-16T13:01:27.143Z"
}

[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33m[test-request-id] Client Error: HttpException: Http Exception[39m
[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33mObject:[39m
{
  "requestId": "test-request-id",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 400,
  "timestamp": "2025-08-16T13:01:27.159Z"
}

[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33m[err_1755349287189_gygaz0tqa] Client Error: HttpException: Test error[39m
[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33mObject:[39m
{
  "requestId": "err_1755349287189_gygaz0tqa",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 400,
  "timestamp": "2025-08-16T13:01:27.189Z"
}

[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33m[test-request-id] Client Error: [object Object][39m
[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33mObject:[39m
{
  "requestId": "test-request-id",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 409,
  "timestamp": "2025-08-16T13:01:27.190Z"
}

[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33m[test-request-id] Client Error: HttpException: Too Many Requests[39m
[33m[Nest] 678683  - [39m08/16/2025, 10:01:27 PM [33m   WARN[39m [38;5;3m[GlobalExceptionFilter] [39m[33mObject:[39m
{
  "requestId": "test-request-id",
  "url": "/api/test",
  "method": "GET",
  "ip": "127.0.0.1",
  "userAgent": "test-agent",
  "statusCode": 429,
  "timestamp": "2025-08-16T13:01:27.191Z"
}

PASS src/interfaces/controllers/kanban/kanban.controller.integration.spec.ts (10.692 s)
PASS src/infrastructure/auth/jwt.strategy.spec.ts
PASS src/interfaces/controllers/case/case.controller.spec.ts (5.483 s)
  ● Console

    console.error
      Failed to delete case 2: Error: Delete failed
          at Object.<anonymous> (/mnt/c/work/git2/process-todo/api/src/interfaces/controllers/case/case.controller.spec.ts:149:32)
          at Promise.finally.completed (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)
          at new Promise (<anonymous>)
          at callAsyncCircusFn (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)
          at _callCircusTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)
          at _runTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:949:3)
          at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:839:13)
          at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at _runTestsForDescribeBlock (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:829:11)
          at run (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:757:3)
          at runAndTransformResultsToJestFormat (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)
          at jestAdapter (/mnt/c/work/git2/process-todo/api/node_modules/jest-circus/build/runner.js:101:19)
          at runTestInternal (/mnt/c/work/git2/process-todo/api/node_modules/jest-runner/build/index.js:275:16)
          at runTest (/mnt/c/work/git2/process-todo/api/node_modules/jest-runner/build/index.js:343:7)

      166 |       } catch (error) {
      167 |         // Skip if case doesn't exist or can't be deleted
    > 168 |         console.error(`Failed to delete case ${caseId}:`, error);
          |                 ^
      169 |       }
      170 |     }
      171 |

      at CaseController.bulkDelete (interfaces/controllers/case/case.controller.ts:168:17)
      at Object.<anonymous> (interfaces/controllers/case/case.controller.spec.ts:152:22)

PASS src/interfaces/controllers/auth/auth.controller.spec.ts
PASS src/interfaces/controllers/step/step.controller.spec.ts (6.148 s)
PASS src/application/dto/process-template/create-step-template.dto.spec.ts (5.679 s)
PASS src/application/dto/process-template/create-process-template.dto.spec.ts (6.369 s)
PASS src/infrastructure/auth/auth.service.spec.ts (5.027 s)
[31m[Nest] 678683  - [39m08/16/2025, 10:02:19 PM [31m  ERROR[39m [38;5;3m[ReplanDomainService] [39m[31mDependency 999 not found for template 1:Invalid Step[39m
[31m[Nest] 678683  - [39m08/16/2025, 10:02:19 PM [31m  ERROR[39m [38;5;3m[ReplanDomainService] [39m[31mAvailable template IDs: 1[39m
PASS src/domain/services/replan-domain.service.spec.ts
  ● Console

    console.log
      Step 1:リード獲得 -> 2025-12-01T00:00:00.000Z

      at Object.<anonymous> (domain/services/replan-domain.service.spec.ts:158:17)

    console.log
      Step 2:初回コンタクト -> 2025-12-03T00:00:00.000Z

      at Object.<anonymous> (domain/services/replan-domain.service.spec.ts:158:17)

    console.log
      Step 3:ヒアリング面談 -> 2025-12-06T00:00:00.000Z

      at Object.<anonymous> (domain/services/replan-domain.service.spec.ts:158:17)

[31m[Nest] 678683  - [39m08/16/2025, 10:02:22 PM [31m  ERROR[39m [38;5;3m[RealtimeGateway] [39m[31mError joining room: Join failed[39m
PASS src/infrastructure/gateways/realtime.gateway.spec.ts
PASS src/domain/services/business-day.service.spec.ts
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays: startDate=2024-01-01T00:00:00.000Z, businessDays=5, countryCode=JP[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays result: 2024-01-08T00:00:00.000Z[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays: startDate=2024-01-08T00:00:00.000Z, businessDays=-5, countryCode=JP[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays result: 2024-01-01T00:00:00.000Z[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays: startDate=2024-01-01T00:00:00.000Z, businessDays=2, countryCode=JP[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays result: 2024-01-04T00:00:00.000Z[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95madjustToBusinessDay: date=2024-01-06T00:00:00.000Z, direction=forward[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays: startDate=2024-01-06T00:00:00.000Z, businessDays=1, countryCode=JP[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays result: 2024-01-08T00:00:00.000Z[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95madjustToBusinessDay: date=2024-01-06T00:00:00.000Z, direction=backward[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays: startDate=2024-01-06T00:00:00.000Z, businessDays=-1, countryCode=JP[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95maddBusinessDays result: 2024-01-05T00:00:00.000Z[39m
[95m[Nest] 678683  - [39m08/16/2025, 10:02:25 PM [95m  DEBUG[39m [38;5;3m[BusinessDayService] [39m[95madjustToBusinessDay: date=2024-01-03T00:00:00.000Z, direction=forward[39m
PASS src/infrastructure/auth/guards/permissions.guard.spec.ts
PASS src/application/usecases/case/create-case.usecase.spec.ts
  ● Console

    console.log
      Schedule Plan: [
        {
          id: 1,
          name: 'Step 1',
          startDate: 2024-12-04T00:00:00.000Z,
          dueDate: 2024-12-17T00:00:00.000Z
        },
        {
          id: 2,
          name: 'Step 2',
          startDate: 2024-12-18T00:00:00.000Z,
          dueDate: 2024-12-24T00:00:00.000Z
        }
      ]

      at CreateCaseUseCase.execute (application/usecases/case/create-case.usecase.ts:57:13)

    console.log
      Creating step instance for Step 1 with start: Wed Dec 04 2024 09:00:00 GMT+0900 (Japan Standard Time), due: Tue Dec 17 2024 09:00:00 GMT+0900 (Japan Standard Time)

      at application/usecases/case/create-case.usecase.ts:66:17
          at Array.map (<anonymous>)

    console.log
        Created instance - Has start date? true

      at application/usecases/case/create-case.usecase.ts:80:17
          at Array.map (<anonymous>)

    console.log
        Start date value: 2024-12-04T00:00:00.000Z

      at application/usecases/case/create-case.usecase.ts:82:19
          at Array.map (<anonymous>)

    console.log
      Creating step instance for Step 2 with start: Wed Dec 18 2024 09:00:00 GMT+0900 (Japan Standard Time), due: Tue Dec 24 2024 09:00:00 GMT+0900 (Japan Standard Time)

      at application/usecases/case/create-case.usecase.ts:66:17
          at Array.map (<anonymous>)

    console.log
        Created instance - Has start date? true

      at application/usecases/case/create-case.usecase.ts:80:17
          at Array.map (<anonymous>)

    console.log
        Start date value: 2024-12-18T00:00:00.000Z

      at application/usecases/case/create-case.usecase.ts:82:19
          at Array.map (<anonymous>)

    console.log
      Schedule Plan: [
        {
          id: 1,
          name: 'Step 1',
          startDate: 2024-12-02T00:00:00.000Z,
          dueDate: 2024-12-13T00:00:00.000Z
        }
      ]

      at CreateCaseUseCase.execute (application/usecases/case/create-case.usecase.ts:57:13)

    console.log
      Creating step instance for Step 1 with start: Mon Dec 02 2024 09:00:00 GMT+0900 (Japan Standard Time), due: Fri Dec 13 2024 09:00:00 GMT+0900 (Japan Standard Time)

      at application/usecases/case/create-case.usecase.ts:66:17
          at Array.map (<anonymous>)

    console.log
        Created instance - Has start date? true

      at application/usecases/case/create-case.usecase.ts:80:17
          at Array.map (<anonymous>)

    console.log
        Start date value: 2024-12-02T00:00:00.000Z

      at application/usecases/case/create-case.usecase.ts:82:19
          at Array.map (<anonymous>)

    console.log
      Schedule Plan: [
        {
          id: 1,
          name: 'Step 1',
          startDate: 2024-11-20T00:00:00.000Z,
          dueDate: 2024-12-10T00:00:00.000Z
        },
        {
          id: 2,
          name: 'Step 2',
          startDate: 2024-12-11T00:00:00.000Z,
          dueDate: 2024-12-17T00:00:00.000Z
        },
        {
          id: 3,
          name: 'Step 3',
          startDate: 2024-12-18T00:00:00.000Z,
          dueDate: 2024-12-20T00:00:00.000Z
        }
      ]

      at CreateCaseUseCase.execute (application/usecases/case/create-case.usecase.ts:57:13)

    console.log
      Creating step instance for Step 1 with start: Wed Nov 20 2024 09:00:00 GMT+0900 (Japan Standard Time), due: Tue Dec 10 2024 09:00:00 GMT+0900 (Japan Standard Time)

      at application/usecases/case/create-case.usecase.ts:66:17
          at Array.map (<anonymous>)

    console.log
        Created instance - Has start date? true

      at application/usecases/case/create-case.usecase.ts:80:17
          at Array.map (<anonymous>)

    console.log
        Start date value: 2024-11-20T00:00:00.000Z

      at application/usecases/case/create-case.usecase.ts:82:19
          at Array.map (<anonymous>)

    console.log
      Creating step instance for Step 2 with start: Wed Dec 11 2024 09:00:00 GMT+0900 (Japan Standard Time), due: Tue Dec 17 2024 09:00:00 GMT+0900 (Japan Standard Time)

      at application/usecases/case/create-case.usecase.ts:66:17
          at Array.map (<anonymous>)

    console.log
        Created instance - Has start date? true

      at application/usecases/case/create-case.usecase.ts:80:17
          at Array.map (<anonymous>)

    console.log
        Start date value: 2024-12-11T00:00:00.000Z

      at application/usecases/case/create-case.usecase.ts:82:19
          at Array.map (<anonymous>)

    console.log
      Creating step instance for Step 3 with start: Wed Dec 18 2024 09:00:00 GMT+0900 (Japan Standard Time), due: Fri Dec 20 2024 09:00:00 GMT+0900 (Japan Standard Time)

      at application/usecases/case/create-case.usecase.ts:66:17
          at Array.map (<anonymous>)

    console.log
        Created instance - Has start date? true

      at application/usecases/case/create-case.usecase.ts:80:17
          at Array.map (<anonymous>)

    console.log
        Start date value: 2024-12-18T00:00:00.000Z

      at application/usecases/case/create-case.usecase.ts:82:19
          at Array.map (<anonymous>)

    console.log
      Schedule Plan: [
        {
          id: 1,
          name: 'Step 1',
          startDate: 2024-12-04T00:00:00.000Z,
          dueDate: 2024-12-17T00:00:00.000Z
        }
      ]

      at CreateCaseUseCase.execute (application/usecases/case/create-case.usecase.ts:57:13)

    console.log
      Creating step instance for Step 1 with start: Wed Dec 04 2024 09:00:00 GMT+0900 (Japan Standard Time), due: Tue Dec 17 2024 09:00:00 GMT+0900 (Japan Standard Time)

      at application/usecases/case/create-case.usecase.ts:66:17
          at Array.map (<anonymous>)

    console.log
        Created instance - Has start date? true

      at application/usecases/case/create-case.usecase.ts:80:17
          at Array.map (<anonymous>)

    console.log
        Start date value: 2024-12-04T00:00:00.000Z

      at application/usecases/case/create-case.usecase.ts:82:19
          at Array.map (<anonymous>)

    console.log
      Schedule Plan: []

      at CreateCaseUseCase.execute (application/usecases/case/create-case.usecase.ts:57:13)

PASS src/infrastructure/auth/guards/roles.guard.spec.ts
PASS src/domain/entities/case.spec.ts
PASS src/domain/entities/process-template.spec.ts
PASS src/domain/entities/step-instance.spec.ts
PASS src/domain/entities/step-template.spec.ts

Summary of all failing tests
FAIL interfaces/controllers/comment/comment.controller.integration.spec.ts (65.033 s)
  ● CommentController Integration Tests - Comment Flow › POST /comments › should create a new comment

    expected 201 "Created", got 404 "Not Found"

      106 |         .post('/api/comments')
      107 |         .send(commentData)
    > 108 |         .expect(201);
          |          ^
      109 |
      110 |       expect(response.body).toHaveProperty('id');
      111 |       expect(response.body).toHaveProperty('content', `${testPrefix}COMMENT_CREATE`);

      at Object.<anonymous> (interfaces/controllers/comment/comment.controller.integration.spec.ts:108:10)
      ----
      at Test._assertStatus (../node_modules/supertest/lib/test.js:309:14)
      at ../node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (../node_modules/supertest/lib/test.js:342:13)
      at Test.assert (../node_modules/supertest/lib/test.js:195:23)
      at localAssert (../node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (../node_modules/supertest/lib/test.js:152:11)

  ● CommentController Integration Tests - Comment Flow › PUT /comments/:id › should update a comment

    expected 200 "OK", got 404 "Not Found"

      232 |         .put(`/api/comments/${updateCommentId}`)
      233 |         .send(updateData)
    > 234 |         .expect(200);
          |          ^
      235 |
      236 |       expect(response.body).toHaveProperty('id', updateCommentId);
      237 |       expect(response.body).toHaveProperty('content', `${testPrefix}COMMENT_UPDATE_MODIFIED`);

      at Object.<anonymous> (interfaces/controllers/comment/comment.controller.integration.spec.ts:234:10)
      ----
      at Test._assertStatus (../node_modules/supertest/lib/test.js:309:14)
      at ../node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (../node_modules/supertest/lib/test.js:342:13)
      at Test.assert (../node_modules/supertest/lib/test.js:195:23)
      at localAssert (../node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (../node_modules/supertest/lib/test.js:152:11)

  ● CommentController Integration Tests - Comment Flow › DELETE /comments/:id › should delete a comment

    expected 204 "No Content", got 404 "Not Found"

      267 |       await request(app.getHttpServer())
      268 |         .delete(`/api/comments/${deleteCommentId}`)
    > 269 |         .expect(204);  // Changed from 200 to 204 (No Content)
          |          ^
      270 |
      271 |       // Verify deleted from database
      272 |       const deletedComment = await prisma.comment.findUnique({

      at Object.<anonymous> (interfaces/controllers/comment/comment.controller.integration.spec.ts:269:10)
      ----
      at Test._assertStatus (../node_modules/supertest/lib/test.js:309:14)
      at ../node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (../node_modules/supertest/lib/test.js:342:13)
      at Test.assert (../node_modules/supertest/lib/test.js:195:23)
      at localAssert (../node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (../node_modules/supertest/lib/test.js:152:11)

  ● CommentController Integration Tests - Comment Flow › Comment workflow integration › should handle complete comment workflow with replies

    expected 201 "Created", got 404 "Not Found"

      296 |           content: `${testPrefix}COMMENT_PARENT`
      297 |         })
    > 298 |         .expect(201);
          |          ^
      299 |
      300 |       const parentId = parentResponse.body.id;
      301 |

      at Object.<anonymous> (interfaces/controllers/comment/comment.controller.integration.spec.ts:298:10)
      ----
      at Test._assertStatus (../node_modules/supertest/lib/test.js:309:14)
      at ../node_modules/supertest/lib/test.js:365:13
      at Test._assertFunction (../node_modules/supertest/lib/test.js:342:13)
      at Test.assert (../node_modules/supertest/lib/test.js:195:23)
      at localAssert (../node_modules/supertest/lib/test.js:138:14)
      at Server.<anonymous> (../node_modules/supertest/lib/test.js:152:11)

FAIL interfaces/controllers/step/step.controller.simple.spec.ts (7.046 s)
  ● StepController Unit Tests › assignTo › should assign a user to a step

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"assigneeId": 2, "stepId": 1}
    Received: 1, {"assigneeId": 2}

    Number of calls: 1

      112 |       const result = await controller.assignTo(stepId, { assigneeId });
      113 |
    > 114 |       expect(assignStepToUserUseCase.execute).toHaveBeenCalledWith({ stepId, assigneeId });
          |                                               ^
      115 |       expect(result).toHaveProperty('id', 1);
      116 |       expect(result).toHaveProperty('assigneeId', assigneeId);
      117 |     });

      at Object.<anonymous> (interfaces/controllers/step/step.controller.simple.spec.ts:114:47)

  ● StepController Unit Tests › assignTo › should unassign a user when assigneeId is null

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: {"assigneeId": null, "stepId": 1}
    Received: 1, {"assigneeId": null}

    Number of calls: 1

      125 |       const result = await controller.assignTo(stepId, { assigneeId: null });
      126 |
    > 127 |       expect(assignStepToUserUseCase.execute).toHaveBeenCalledWith({ stepId, assigneeId: null });
          |                                               ^
      128 |       expect(result).toHaveProperty('assigneeId', null);
      129 |     });
      130 |

      at Object.<anonymous> (interfaces/controllers/step/step.controller.simple.spec.ts:127:47)

FAIL common/filters/global-exception.filter.spec.ts
  ● GlobalExceptionFilter › catch › should handle rate limit errors

    expect(jest.fn()).toHaveBeenCalledWith(...expected)

    Expected: ObjectContaining {"errorCode": "RATE_LIMIT_ERROR", "message": "Too Many Requests", "statusCode": 429}
    Received: {"message": "Too Many Requests", "method": "GET", "path": "/api/test", "requestId": "test-request-id", "statusCode": 429, "timestamp": "2025-08-16T13:01:27.191Z"}

    Number of calls: 1

      184 |
      185 |       expect(mockResponse.status).toHaveBeenCalledWith(HttpStatus.TOO_MANY_REQUESTS);
    > 186 |       expect(mockResponse.json).toHaveBeenCalledWith(
          |                                 ^
      187 |         expect.objectContaining({
      188 |           statusCode: HttpStatus.TOO_MANY_REQUESTS,
      189 |           message: 'Too Many Requests',

      at Object.<anonymous> (common/filters/global-exception.filter.spec.ts:186:33)


Test Suites: 3 failed, 19 passed, 22 total
Tests:       7 failed, 199 passed, 206 total
Snapshots:   0 total
Time:        158.713 s, estimated 159 s
Ran all test suites.
