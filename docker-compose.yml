version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: process-todo-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: process_todo
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - process-todo-network

  redis:
    image: redis:7-alpine
    container_name: process-todo-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - process-todo-network

  minio:
    image: minio/minio:latest
    container_name: process-todo-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    networks:
      - process-todo-network

  api:
    build:
      context: ./api
      dockerfile: Dockerfile.dev
    container_name: process-todo-api
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@db:5432/process_todo?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_USE_SSL: 'false'
      MINIO_BUCKET: process-todo
      JWT_SECRET: your-secret-key-here-change-in-production
      JWT_EXPIRES_IN: 7d
      TZ: Asia/Tokyo
    ports:
      - '3001:3001'
    depends_on:
      - db
      - redis
      - minio
    volumes:
      - ./api:/app
      - /app/node_modules
    networks:
      - process-todo-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  process-todo-network:
    driver: bridge